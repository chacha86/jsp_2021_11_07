<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.example.model.ArticleMapper">	
	<insert id="insertArticle"
		parameterType="Article">
		INSERT INTO article
		SET
		title = #{title},
		body = #{body},
		regDate = #{regDate},
		memberId =
		#{memberId}
	</insert>

	<select id="selectArticle"
		resultType="Article">
		SELECT a.id,
		a.title,
		a.body,
		a.regDate,
		m.nickname,
		COUNT(ar.id) rcnt
		FROM article a
		LEFT OUTER JOIN articleReply ar
		ON a.id
		= ar.articleId
		INNER JOIN `member` m
		ON a.memberId = m.id
		GROUP BY a.id
	</select>

	<update id="updateArticle"
		parameterType="Article">
		UPDATE article
		SET title
		= #{title},
		`body` = #{body}
		WHERE
		id = #{id};
	</update>

	<delete id="deleteArticle" parameterType="int">
		DELETE FROM article
		WHERE id = #{id}
	</delete>

	<select id="selectArticleByKeyword" parameterType="string"
		resultType="Article">
		SELECT *
		FROM article
		WHERE title LIKE #{keyword}
	</select>

	<select id="selectArticleById" parameterType="int"
		resultType="Article">
		SELECT a.id,
		a.title,
		a.body,
		a.regDate,
		m.nickname
		FROM article a,
		`member` m
		WHERE a.memberId = m.id
		AND a.id = #{id};
	</select>

	<insert id="insertMember"
		parameterType="Member">
		INSERT INTO `member`
		SET
		loginId = #{loginId},
		loginPw =
		#{loginPw},
		nickname = #{nickname},
		regDate = NOW()
	</insert>

	<select id="selectMemberByLoginId" parameterType="string"
		resultType="Member">
		SELECT *
		FROM `member`
		WHERE loginId = #{loginId}
	</select>

	<select id="selectMemberByLoginIdAndLoginPw"
		parameterType="Member"
		resultType="Member">
		SELECT *
		FROM `member`
		WHERE loginId = #{loginId}
		AND loginPw
		= #{loginPw}
	</select>

	<insert id="insertReply"
		parameterType="Reply">
		INSERT INTO articleReply
		SET articleId = #{articleId},
		`body` = #{body},
		memberId = #{memberId},
		regDate = NOW()
	</insert>

	<select id="selectRepliesByArticleId" parameterType="int"
		resultType="Reply">
		SELECT ar.body, ar.regDate, m.nickname
		FROM articleReply ar,
		`member` m
		WHERE ar.memberId = m.id
		AND articleId = #{id}
	</select>


</mapper>